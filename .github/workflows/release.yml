name: Release Workflow
on:
  pull_request:
    branches:
      # PR events on main branch
      - main
    types:
      # PR closed events on main branch
      - closed
jobs:
  release:
    name: Release
    runs-on: Ubuntu-latest
    # set Node.js versions
    strategy:
      matrix:
        node-version: [12.x]
    if: ${{ github.event.pull_request.merged == true && startsWith(github.head_ref, 'releases/v') }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main

      # Use a Node.js version from list
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # cache node modules for faster audit
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # cache nextjs builds for faster builds
      - name: Cache nextjs builds
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      # switch to main
      - name: Switch to main branch
        run: git switch main

      # installs  Dependencies
      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      # Trigger Release
      - name: Trigger Release
        run: yarn release:trigger

        # set environment variables
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
